import org.groovymc.modsdotgroovy.core.Platform
import org.groovymc.modsdotgroovy.gradle.tasks.AbstractGatherPlatformDetailsTask

plugins {
	id 'convention.consumer'
	alias libs.plugins.architectury.loom
	alias libs.plugins.mdg
	alias libs.plugins.opensesame
	alias libs.plugins.opensesame.loom
	alias libs.plugins.curseforgegradle
	alias libs.plugins.minotaur
}

opensesame.apply(sourceSets.main)

modsDotGroovy {
	platform = Platform.FABRIC
	inferGather.set false
	multiplatform {
		from ':common'
	}
	apply()
}

tasks.named('gatherFabricPlatformDetails', AbstractGatherPlatformDetailsTask).configure {
	minecraftVersion = libs.versions.minecraft.get()
	platformVersion = libs.versions.fabric.loader.get()
}

dependencies {
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${libs.versions.parchment.minecraft.get()}:${libs.versions.parchment.mappings.get()}@zip")
	}
	minecraft libs.minecraft
	modImplementation libs.fabric.loader
	modImplementation libs.fabric.api

	implementation libs.codecextras
	include libs.codecextras

	modImplementation libs.opensesame.fabric
	include libs.opensesame.fabric
}

loom {
	mixin {
		defaultRefmapName = "revamped_phantoms.refmap.json"
	}
	runs {
		client {
			client()
			setConfigName("Fabric Client")
			ideConfigGenerated(true)
			runDir("run")
		}
		server {
			server()
			setConfigName("Fabric Server")
			ideConfigGenerated(true)
			runDir("runserver")
		}
	}
}

import net.darkhax.curseforgegradle.TaskPublishCurseForge

if (System.getenv('CURSEFORGE_KEY')) {
	tasks.register('curseforge', TaskPublishCurseForge) {
		disableVersionDetection()
		apiToken = System.getenv('CURSEFORGE_KEY')
		def projectId = '575418'
		def mainFile = upload(projectId, tasks.remapJar)
		mainFile.displayName = "Revamped Phantoms [Fabric/Quilt] v$project.version"
		mainFile.releaseType = "${project.release_type}"
		mainFile.addModLoader('Fabric', 'Quilt')
		mainFile.addGameVersion("${libs.versions.minecraft.get()}")
		mainFile.addRequirement("fabric-api")
		mainFile.changelog = ''
	}

	afterEvaluate {
		tasks.curseforge.dependsOn tasks.remapJar
	}
}

if (System.getenv('MODRINTH_KEY')) {
	modrinth {
		token = System.getenv('MODRINTH_KEY')
		projectId = 'YJOG99cQ'
		versionNumber = "$project.version"
		versionType = "${project.release_type}"
		detectLoaders = false
		uploadFile = remapJar
		gameVersions = ["${libs.versions.minecraft.get()}"]
		loaders = ['fabric', 'quilt']
		dependencies {
			required.project 'fabric-api'
		}
	}
}
