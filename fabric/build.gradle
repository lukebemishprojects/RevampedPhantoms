import org.groovymc.modsdotgroovy.core.Platform
import org.groovymc.modsdotgroovy.gradle.tasks.AbstractGatherPlatformDetailsTask

plugins {
	id 'convention.consumer'
	alias libs.plugins.architectury.loom
	alias libs.plugins.mdg
    alias libs.plugins.opensesame
    alias libs.plugins.opensesame.loom
}

opensesame.apply(sourceSets.main)

modsDotGroovy {
	platform = Platform.FABRIC
	inferGather.set false
	multiplatform {
		from ':common'
	}
	apply()
}

tasks.named('gatherFabricPlatformDetails', AbstractGatherPlatformDetailsTask).configure {
	minecraftVersion = libs.versions.minecraft.get()
	platformVersion = libs.versions.fabric.loader.get()
}

dependencies {
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${libs.versions.parchment.minecraft.get()}:${libs.versions.parchment.mappings.get()}@zip")
	}
	minecraft libs.minecraft
	modImplementation libs.fabric.loader
	modImplementation libs.fabric.api

    implementation libs.codecextras
    include libs.codecextras

    modImplementation libs.opensesame.fabric
    include libs.opensesame.fabric
}

loom {
	mixin {
		defaultRefmapName = "revamped_phantoms.refmap.json"
	}
	runs {
		client {
			client()
			setConfigName("Fabric Client")
			ideConfigGenerated(true)
			runDir("run")
		}
		server {
			server()
			setConfigName("Fabric Server")
			ideConfigGenerated(true)
			runDir("runserver")
		}
	}
}
